{
    "[azure-pipelines]": {
        "editor.defaultFormatter": "esbenp.prettier-vscode"
    },
    "[css]": {
        "editor.defaultFormatter": "svipas.prettier-plus"
    },
    "[javascript]": {
        "editor.defaultFormatter": "dbaeumer.vscode-eslint"
    },
    "[javascriptreact]": {
        "editor.defaultFormatter": "dbaeumer.vscode-eslint"
    },
    "[json]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },
    "[jsonc]": {
        "editor.defaultFormatter": "svipas.prettier-plus"
    },
    "[markdown]": {
        "editor.defaultFormatter": "svipas.prettier-plus"
    },
    "[scss]": {
        "editor.defaultFormatter": "svipas.prettier-plus"
    },
    "[typescript]": {
        "editor.defaultFormatter": "dbaeumer.vscode-eslint"
    },
    "[typescriptreact]": {
        "editor.defaultFormatter": "dbaeumer.vscode-eslint"
    },
    "[yaml]": {
        "editor.defaultFormatter": "redhat.vscode-yaml"
    },
    "debug.allowBreakpointsEverywhere": true,
    "debug.inlineValues": true,
    "debug.showInStatusBar": "onFirstSessionStart",
    "docthis.enableHungarianNotationEvaluation": true,
    "docthis.includeDateTag": false,
    "docthis.inferTypesFromNames": true,
    "editor.linkedEditing": true,
    "editor.renderIndentGuides": true,
    "editor.rulers": [100, 120],
    "editor.wordWrap": "on",
    "eslint.alwaysShowStatus": true,
    "eslint.format.enable": true,
    "eslint.options": {},
    "eslint.validate": [
        "javascript",
        "javascriptreact",
        "typescript",
        "typescriptreact"
    ],
    "explorer.autoReveal": false,
    "explorer.sortOrder": "type",
    "files.exclude": {
        "**/*.log": true,
        "**/*.map.js": true,
        "**/.DS_Store": true,
        "**/.git": true,
        "**/.git/objects/**": true,
        "**/.git/subtree-cache/**": true,
        "**/.hg": true,
        "**/.history/**": true,
        "**/.svn": true,
        "**/CVS": true,
        "**/bower_components/**": true,
        "**/node_modules/**": true,
        "desktop.ini": true,
        "folderico*.ico": true
    },
    "files.insertFinalNewline": true,
    "files.trimTrailingWhitespace": true,
    "html.format.indentInnerHtml": true,
    "material-icon-theme.activeIconPack": "react_redux",
    "material-icon-theme.files.associations": {
        "*.atom.js": "redux-store",
        "*.atom.ts": "redux-store",
        "*.cfg.js": "settings",
        "*.cfg.ts": "settings",
        "*.config.js": "settings",
        "*.config.ts": "settings",
        "*.controller.ts": "nest-controller",
        "*.cron.ts": "nest-controller",
        "*.database.config.js": "database",
        "*.database.config.ts": "database",
        "*.decorator.ts": "nest-decorator",
        "*.dto.ts": "raml",
        "*.entity.ts": "raml",
        "*.enum.ts": "purescript",
        "*.env.js": "tune",
        "*.env.json": "tune",
        "*.filter.ts": "nest-filter",
        "*.gateway.ts": "nest-gateway",
        "*.guard.ts": "nest-guard",
        "*.hook.js": "capacitor",
        "*.hook.ts": "capacitor",
        "*.job.ts": "nest-service",
        "*.lib.js": "lib",
        "*.lib.ts": "lib",
        "*.mask.js": "lib",
        "*.mask.ts": "lib",
        "*.middleware.ts": "nest-middleware",
        "*.module.ts": "nest-module",
        "*.normalizer.js": "lib",
        "*.normalizer.ts": "lib",
        "*.page.jsx": "document",
        "*.page.tsx": "document",
        "*.pipe.ts": "nest-pipe",
        "*.provider.ts": "nest-service",
        "*.resolver.ts": "nest-resolver",
        "*.router.jsx": "routing",
        "*.router.tsx": "routing",
        "*.saga.js": "redux-store",
        "*.saga.ts": "redux-store",
        "*.selector.js": "redux-action",
        "*.selector.ts": "redux-action",
        "*.service.ts": "nest-service",
        "*.util.js": "lib",
        "*.util.ts": "lib",
        "*.validator.js": "lib",
        "*.validator.ts": "lib",
        "*.worker.ts": "nest-pipe",
        "database.config.js": "database",
        "database.config.ts": "database",
        "defaults.js": "makefile",
        "defaults.ts": "makefile",
        "index.js": "javascript-map",
        "index.ts": "typescript-def",
        "keys.json": "key",
        "package.json": "nodejs_alt",
        "service-worker.js": "http",
        "setupTests.js": "jest",
        "tsconfig.build.json": "tsconfig",
        "tsconfig.json": "tsconfig"
    },
    "material-icon-theme.folders.associations": {
        "adapters": "connection",
        "context": "global",
        "decorators": "custom",
        "entities": "mappings",
        "masks": "middleware",
        "migrations": "scripts",
        "modules": "middleware",
        "normalizers": "lib",
        "schema": "mappings",
        "services": "api",
        "ui": "core",
        "validators": "syntax",
        "variables": "shared",
        "vars": "shared"
    },
    "prettier.eslintIntegration": true,
    "prettier.singleQuote": true,
    "prettier.stylelintIntegration": true,
    "prettier.tabWidth": 4,
    "prettier.useTabs": false,
    "typescript.format.insertSpaceAfterConstructor": true,
    "typescript.format.insertSpaceAfterTypeAssertion": true,
    "typescript.format.placeOpenBraceOnNewLineForControlBlocks": true,
    "typescript.format.placeOpenBraceOnNewLineForFunctions": true,
    "typescript.tsdk": "node_modules\\typescript\\lib",
    "workbench.editor.decorations.badges": true,
    "workbench.editor.decorations.colors": true,
    "workbench.editor.tabSizing": "shrink",
    "workbench.editor.wrapTabs": true,
    "workbench.iconTheme": "material-icon-theme"
}
